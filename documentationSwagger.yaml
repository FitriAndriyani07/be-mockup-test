openapi: 3.0.0
info:
  title: TODO APPS
  description: |-
    TODO Apps adalah sebuah layanan yang digunakan untuk melakukan pencatatan TODO List sederhana. Pengguna dapat menambahkan, menghapus, mengedit, serta mengubah status TODO menjadi selesai setelah melakukan proses autentikasi. 
  contact: 
    email: 202410102062@mail.unej.ac.id
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Test local computer
  - url: not yet available
    description: Production
tags:
  - name: Users
    description: Mengolah data user dan proses autentikasi
  - name: Todos
    description: Informasi mengenai TODO List
paths:
  /register:
    post:
      tags:
        - Users
      summary: Mendaftarkan user baru
      description: |-
        Registrasi user diperlukan agar user dapat melakukan log in.
      operationId: post-register-user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: sabrina
      responses:
        "200":
          description: User Registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data:
                    example: null
        "400":
          description: Error Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: Name is required!
                      data: 
                        example: null
              examples:
                required-data-is-not-provided:
                  summary: Jika data yang dibutuhkan tidak tersedia
                  value:
                    status: false
                    message: Name is required!
                    data: null
                    
  /login:
    post:
      tags:
        - Users
      summary: Mendapatkan token autentikasi
      description: Token autentikasi diperlukan untuk mengakses beberapa endpoint yang dilindungi.
      operationId: post-login-user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login_key:
                  type: integer
                  example: 5098
      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data: 
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Fitri
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Mywicm9sZSI6InVzZXIiLCJpYXQiOjE2ODcxNjg3MDR9.H4k4sMd2XH8AiWMRxdgelXMBb0DlC5nQiTEWAxyUzIU
        "400":
          description: Error Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: login_key is invalid.
                      data: 
                        example: null
              examples:
                login_key-is-not-valid:
                  summary: Jika login_key tidak valid
                  value:
                    status: false
                    message: login_key is invalid.
                    data: null
                    
  /todos:
    post:
      tags:
        - Todos
      summary: Menambahkan todo
      description:  Menambahkan todo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 2
                todo:
                  type: string
                  example: masak
                deadline:
                  type: string
                  example: 12-08-2023
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 2
                      todo:
                        type: string
                        example: masak
                      deadline:
                        type: string
                        example: 12-08-2023
                      created_at:
                        type: string
                        format: date-time
                        example: 2023-06-23T13:45:06.740Z
                      updated_at:
                        type: string
                        format: date-time
                        example: 2023-06-23T13:45:06.740Z
                    
        "400":
          description: Error Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: All field are required.
                  data: 
                    example: null
        "404":
          description: Error Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User with id 4 is not found
                  data: 
                    example: null
      security:
        - jwt_token: []
    put:
      tags:
        - Todos
      summary: Mengubah status is_done
      description: untuk mengubah status is_done menjadi true
      operationId: put-todos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 3
                is_done:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data:
                    type: string
                    example: null
      security:
        - jwt_token: []
        
  /users/{id}/todos:
    get:
      tags:
        - Todos
      summary: Mendapatkan semua todos berdasarkan user id
      description: Mendapatkan semua data todos berdasarkan user id
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          example: 1
        description: id of todo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 2
                        todo:
                          type: string
                          example: masak
                        deadline:
                          type: string
                          example: 12-08-2023
                        created_at:
                          type: string
                          format: date-time
                          example: 2023-06-23T13:45:06.740Z
                        updated_at:
                          type: string
                          format: date-time
                          example: 2023-06-23T13:45:06.740Z
                    
        "404":
          description: Error Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: User with id 1 is not found
                      data: 
                        example: null
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: Notification is still empty
                      data: 
                        example: null
              examples:
                user-not-found:
                  summary: Jika pengguna tidak ditemukan
                  value:
                    status: false
                    message: User with id is not found
                    data: null
                notifs-not-found:
                  summary: Jika notifikasi tidak ditemukan
                  value:
                    status: false
                    message: Notification is still empty
                    data: null
      security:
        - jwt_token: []
        
  /todos/{id}:
   get:
      tags:
        - Todos
      summary: Mendapatkan todo berdasarkan id
      description: GET todo by id
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          example: 1
        description: id of todo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 2
                        todo:
                          type: string
                          example: masak
                        deadline:
                          type: string
                          example: 12-08-2023
                        created_at:
                          type: string
                          format: date-time
                          example: 2023-06-23T13:45:06.740Z
                        updated_at:
                          type: string
                          format: date-time
                          example: 2023-06-23T13:45:06.740Z
                    
        "404":
          description: Error Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Todo with id 4 is not found
                  data: 
                    example: null
      security:
        - jwt_token: []
   delete:
      tags:
        - Todos
      summary: Menghapus todo berdasarkan id
      description: Delete todo by id
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          example: 1
        description: id of todo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    example: null

                    
        "404":
          description: Error Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Todo with id 4 is not found
                  data: 
                    example: null
      security:
        - jwt_token: []

components:
  securitySchemes:
    jwt_token:
      type: apiKey
      in: header
      name: Authorization
      